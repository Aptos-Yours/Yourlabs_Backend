generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int             @id @unique(map: "id") @default(autoincrement())
  snsId         String?         @unique(map: "sns_id") @db.VarChar(30)
  name          String?         @db.VarChar(30)
  profileImage  String?         @db.VarChar(300)
  email         String          @db.VarChar(50)
  phone         String?         @db.VarChar(45)
  social        String?         @db.VarChar(30)
  refreshToken  String?         @db.VarChar(200)
  isMarketing   Boolean
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  admin         admin[]
  user_has_nfts user_has_nfts[]
}

model nfts {
  id            Int             @id @unique(map: "id") @default(autoincrement())
  ownerId       Int?
  nftName       String?         @db.VarChar(100)
  image         String?         @db.VarChar(800)
  description   String?         @db.Text
  authType      Int?
  options       String?         @db.VarChar(100)
  nftAddress    String?         @db.VarChar(50)
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
  admin         admin[]
  reward        reward[]
  user_has_nfts user_has_nfts[]

  @@index([nftName])
}

model reward {
  id          Int     @id @unique(map: "id") @default(autoincrement())
  nftId       Int?
  rewardName  String? @db.VarChar(100)
  description String? @db.Text
  nfts        nfts?   @relation(fields: [nftId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reward_nfts_id_fk")

  @@index([nftId], map: "reward_nfts_id_fk")
}

model user_has_nfts {
  userId  Int
  nftId   Int
  isMoved Boolean? @default(false)
  nfts    nfts     @relation(fields: [nftId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_has_nfts_nfts_id_fk")
  user    user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_has_nfts_user_id_fk")

  @@id([userId, nftId])
  @@index([nftId], map: "user_has_nfts_nfts_id_fk")
  @@index([userId], map: "user_has_nfts_user_id_fk")
}

model admin {
  id     Int    @id @unique(map: "id") @default(autoincrement())
  userId Int
  nftId  Int
  image  String @db.VarChar(800)
  nfts   nfts   @relation(fields: [nftId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admin_nfts_id_fk")
  user   user   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admin_user_id_fk")

  @@index([nftId], map: "admin_nfts_id_fk")
  @@index([userId], map: "admin_user_id_fk")
}
